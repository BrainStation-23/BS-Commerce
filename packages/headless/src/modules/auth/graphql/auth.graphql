input UserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input SignInInput {
  username: String!
  password: String!
}

type User {
  id: String!
  firstName: String!
  lastName: String!
  displayName: String!
  username: String!
  email: String!
  provider: String
}

type Token {
  token: String!
}

interface BaseResponse {
  error: String
  code: Int!
  # data
}

type AuthResponse implements BaseResponse {
  data: User!
}

type SignInResponse implements BaseResponse {
  data: Token!
}

type Mutation {
  signUp(user: UserInput!): AuthResponse!
  signIn(data: SignInInput!): SignInResponse!
}
