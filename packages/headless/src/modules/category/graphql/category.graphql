
type Category{
    id: String
    name: String
    slug: String
    description: String
    imageId: String
    showOnHomePage: Boolean
    includeInTopMenu: Boolean
    allowToSelectPageSize: Boolean
    published: Boolean
    displayOrder: Int
    rootPath:String
    ancestors: [Ancestor]
    meta: Meta
}

type Ancestor {
    name: String
    slug: String
    level:Int
}

type Meta {
    keywords: [String]
    description: String
    title: String
    SEFN: String
}

input CategoryInput{
    name: String!
    slug:String
}

type CategoryResponse {
  error: String
  code: Int!
  data: Category
}

type CategoryListResponse {
  error: String
  code: Int!
  data: [Category]
}

type Query {
    getCategory(categoryId:String!):CategoryResponse!
    getCategoryBySlug(slug:String!):CategoryResponse!
    getCategoryList:CategoryListResponse!
}

type Mutation {
    createCategory(category: CategoryInput!): CategoryResponse!
}