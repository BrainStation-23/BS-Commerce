scalar DateTime

type Item {
  product: String!
  quantity: Int!
}

input ItemInput {
  product: String!
  quantity: Int!
}

type HelloResponse {
  message: WishList!
  name: String
}

type WishListResponse {
  error: String
  code: Int!
  data: WishList
}

type WishList {
  id: String!
  user: String!
  items: [Item!]!
  createdOn: DateTime
  updatedOn: DateTime
}

type Query {
  hello: HelloResponse
  getWishlist(wishlistId: String!): WishListResponse!
  getUserWishlist(userId: String!): WishListResponse!
  getItemsWithoutPopulate(userId: String!): WishListResponse!
}

type Mutation {
  addToWishlist(item: ItemInput!, userId: String!): WishListResponse!
  deleteWishListById(wishlistId: String!): WishListResponse!
  deleteWishlistItem(product: String!, userId: String): WishListResponse!
  deleteAllWishlistItems(userId: String!): WishListResponse!
}
