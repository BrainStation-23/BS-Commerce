scalar DateTime

type Info {
  name: String!
  shortDescription: String
  fullDescription: String
  sku: String!
  price: Int!
  oldPrice: Int!
  cost: Int!
  showOnHomePage: Boolean
  includeInTopMenu: Boolean
  allowToSelectPageSize: Boolean
  published: Boolean
  displayOrder: Int
  isFeatured: Boolean
  publishDate: DateTime
}

input InfoInput {
  name: String!
  shortDescription: String
  fullDescription: String
  sku: String!
  price: Int!
  oldPrice: Int!
  cost: Int!
  showOnHomePage: Boolean
  includeInTopMenu: Boolean
  allowToSelectPageSize: Boolean
  published: Boolean
  displayOrder: Int
  isFeatured: Boolean
  publishDate: DateTime
}

input UpdateInfoInput {
  name: String
  shortDescription: String
  fullDescription: String
  sku: String
  price: Int
  oldPrice: Int
  cost: Int
  showOnHomePage: Boolean
  includeInTopMenu: Boolean
  allowToSelectPageSize: Boolean
  published: Boolean
  displayOrder: Int
  isFeatured: Boolean
}

type Meta {
  keywords: [String]
  title: String
  description: String
  friendlyPageName: String!
}

input MetaInput {
  keywords: [String]
  title: String
  description: String
  friendlyPageName: String!
}

input UpdateMetaInput {
  keywords: [String]
  title: String
  description: String
  friendlyPageName: String
}

type Photo {
  url: String
  id: String
  title: String
  alt: String
  displayOrder: Int
}

input PhotoInput {
  url: String
  id: String
  title: String
  alt: String
  displayOrder: Int
}

type Categories {
  id: String!
  isFeatured: Boolean
  displayOrder: Int
}

input CategoriesInput {
  id: String!
  isFeatured: Boolean
  displayOrder: Int
}

input UpdateCategoriesInput {
  id: String
  isFeatured: Boolean
  displayOrder: Int
}

type Product {
  id: String!
  info: Info!
  meta: Meta!
  tags: [String]
  photos: [Photo]
  brands: [String]
  categories: [Categories!]!
}

type ConditionalProduct {
  info: Info!
  photos: [Photo]
  brands: [String]
}

input ProductInput {
  info: InfoInput!
  meta: MetaInput!
  tags: [String]
  photos: [PhotoInput]
  brands: [String!]!
  categories: [CategoriesInput!]!
}

input UpdateProductInput {
  info: UpdateInfoInput
  meta: UpdateMetaInput
  tags: [String]
  photos: [PhotoInput]
  brands: [String]
  categories: [UpdateCategoriesInput]
}


input SearchCondition {
  skip: Int
  limit: Int
  brandId: String
  categoryId: String
  productName: String
  isFeatured: Boolean
  slug: String
  orderBy: String
}

type ProductArrayWithCount {
  products: [ConditionalProduct!]!
  count: Int!
}

input queryConditionInput {
  limit: Int
  skip: Int
}

input getProductBySKUParams {
  sku: String!
}

input getProductParams {
  productId: String!
}

input deleteProductParams {
  productId: String!
}

input updateProductParams {
  productId: String!
}

input updateProductsForBrandBody {
  productIds: [String!]!
  brandId: String!
}

type ProductResponse {
  error: String
  code: Int!
  data: Product
}

type Message {
  message: String!
}

type ProductDeletedResponse {
  error: String
  code: Int!
  data: Message
}

type ProductArrayResponse {
  error: String
  code: Int!
  data: [Product]
}

type ProductArrayWithCountResponse {
  error: String
  code: Int!
  data: ProductArrayWithCount
}

type Count {
  count: Int!
}

type ProductCount {
  error: String
  code: Int!
  data: Count!
}

type Query {
  getProduct(params: getProductParams!): ProductResponse!
  getAllProducts(query: queryConditionInput): ProductArrayResponse!
  getCustomerProduct(params: getProductParams!): ProductResponse!
  getCustomerAllProducts(query: SearchCondition): ProductArrayResponse!
  getProductCount: ProductCount!
  getProductBySKU(params: getProductBySKUParams!): ProductResponse!
  getProductsByCondition(
    condition: SearchCondition
  ): ProductArrayWithCountResponse!
}

type Mutation {
  addProduct(product: ProductInput): ProductResponse!
  deleteProduct(params: deleteProductParams!): ProductDeletedResponse!
  updateProduct(
    product: UpdateProductInput
    params: updateProductParams!
  ): ProductResponse!
  updateProductsForBrand(
    data: updateProductsForBrandBody!
  ): ProductArrayResponse!
}
